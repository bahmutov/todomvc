# CircleCI v2 reference
# https://circleci.com/docs/2.0/configuration-reference/

defaults: &defaults
  working_directory: ~/app
  docker:
    - image: cypress/base:10

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      # find compatible cache from previous build,
      # it should have same dependencies installed from package.json checksum
      - restore_cache:
          keys:
            - cache-{{ .Branch }}-{{ checksum "package.json" }}
      - run:
          name: Install Dependencies
          command: npm ci
      # run verify and then save cache.
      # this ensures that the Cypress verified status is cached too
      - run: npm run cy:verify

      - run: ssh-keyscan -H github.com >> ~/.ssh/known_hosts

      # save new cache folder if needed
      - save_cache:
          key: cache-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ~/.npm
            - ~/.cache

      # all other test jobs will run AFTER this build job finishes
      # to avoid reinstalling dependencies, we persist the source folder "app"
      # and the Cypress binary to workspace, which is the fastest way
      # for Circle jobs to pass files
      - persist_to_workspace:
          root: ~/
          paths:
            - app
            - .cache/Cypress
            - .ssh

  test-locally:
    <<: *defaults
    # run this job on 2 machines at once
    parallelism: 2
    steps:
      # restore application and Cypress binary before running the test command
      - attach_workspace:
          at: ~/
      - run: npm run test:ci:record

  deploy:
    <<: *defaults
    steps:
      # restore application and Cypress binary before running the test command
      - attach_workspace:
          at: ~/
      - run: npm run deploy

  post-deploy-test:
    <<: *defaults
    steps:
      # restore application and Cypress binary before running the test command
      - attach_workspace:
          at: ~/
      - run: npm run test:smoke -- --record --group "Smoke test"

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      # runs a couple of machines in parallel
      # with load balanced all tests against a local server
      - test-locally:
          requires:
            - build
      # pushes app to https://glebbahmutov.com/todomvc
      - deploy:
          branches:
            only:
              - master
          requires:
            - test-locally
      - post-deploy-test:
          branches:
            only:
              - master
          requires:
            - deploy
